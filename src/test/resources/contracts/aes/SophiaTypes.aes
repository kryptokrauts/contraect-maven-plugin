// ISC License
//
// Copyright (c) 2019, kryptokrauts.com
//
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
// AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
// INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
// LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
// OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.
//

// contract to test params and return values for all sophia types
// https://github.com/aeternity/protocol/blob/master/contracts/sophia.md#types
contract SophiaTypes =

    record company =
      {  ceo: address,
         shareholders: map(address, int),
         employees: list(employee),
         location: companyAddress }
    
    record companyAddress =
      {  zip: int,
         street: string,
         city: string }

    record employee =
      {  address: address,
         firstname: string,
         lastname: string }

    stateful entrypoint testInt(intValue: int) : int =
        intValue

    stateful entrypoint testAddress(addressValue: address) : address =
        addressValue

    stateful entrypoint testBool(boolValue: bool) : bool =
        boolValue

    stateful entrypoint testBits(bitsValue: bits) : bits =
        bitsValue

    stateful entrypoint testBytes(bytesValue: bytes(64)) : bytes(64) =
        bytesValue

    stateful entrypoint testString(stringValue: string) : string =
        stringValue

    stateful entrypoint testListInt(listIntValue: list(int)) : list(int) =
        listIntValue

    stateful entrypoint testListAddressInt(listAddressIntValue: list(address * int)) : list(address * int) =
        listAddressIntValue

    stateful entrypoint testCompanyRecord(companyRecordValue: company) : company =
        companyRecordValue
    
    stateful entrypoint testMapStringAddress(mapStringAddressValue: map(string, address)) : map(string, address) =
        mapStringAddressValue

    stateful entrypoint testOption(optionValue: option('a)) : option('a) =
        optionValue

    stateful entrypoint testHash(hashValue: hash) : hash =
        hashValue

    stateful entrypoint testSignature(signatureValue: signature) : signature =
        signatureValue