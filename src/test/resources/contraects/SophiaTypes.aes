contract SophiaTypes =

    record company =
      {  ceo: address,
         shareholders: map(address, int),
         employees: list(employee),
         location: companyAddress }
    
    record companyAddress =
      {  zip: int,
         street: string,
         city: string }

    record employee =
      {  address: address,
         firstname: string,
         lastname: string }
         
    entrypoint testAddress(addressValue: address) : address =
        addressValue
        
    entrypoint testInt(intValue: int) : int =
        intValue

    entrypoint testMap(mapValue: map(int, bool)) : map(int, bool) =
        mapValue
        
    entrypoint testListMap(mapValue: list(map(int, bool))) : list(map(int, bool)) =
        mapValue
        
    entrypoint testListListMap(mapValue: list(list(map(int, bool)))) : list(list(map(int, bool))) =
        mapValue
        
    entrypoint testTuple(tupleValue: int * bool) : (int * bool) =
        tupleValue
        
    entrypoint testListIntInt(listIntValue: list(int * int)) : list(int * int) =
        listIntValue
    
    entrypoint testListInt(listIntValue: list(int)) : list(int) =
        listIntValue
    
    entrypoint testListAddressInt(listAddressIntValue: list(address * int)) : list(address * int) =
        listAddressIntValue
        
    entrypoint testIntStr(intValue: int, stringValue: string) : string =
        String.concat(stringValue,Int.to_str(intValue))
        
    entrypoint testEmployee(eValue: employee) : employee =
        eValue