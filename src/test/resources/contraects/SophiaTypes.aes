contract SophiaTypes =

    record company =
      {  ceo: address,
         shareholders: map(address, int),
         employees: list(employee),
         location: companyAddress }
    
    record companyAddress =
      {  zip: int,
         street: string,
         city: string }

    record employee =
      {  address: address,
         firstname: string,
         lastname: string }
         
    entrypoint testInt(intValue: int) : int =
        intValue

    entrypoint testAddress(addressValue: address) : address =
        addressValue

    entrypoint testBool(boolValue: bool) : bool =
        boolValue

    entrypoint testBits(bitsValue: bits) : bits =
        bitsValue

    entrypoint testBytes(bytesValue: bytes(64)) : bytes(64) =
        bytesValue

    entrypoint testString(stringValue: string) : string =
        stringValue

    entrypoint testListInt(listIntValue: list(int)) : list(int) =
        listIntValue

    entrypoint testListAddressInt(listAddressIntValue: list(address * int)) : list(address * int) =
        listAddressIntValue

    entrypoint testCompanyRecord(companyRecordValue: company) : company =
        companyRecordValue
    
    entrypoint testMapStringAddress(mapStringAddressValue: map(string, address)) : map(string, address) =
        mapStringAddressValue

    entrypoint testOption(optionValue: option('a)) : option('a) =
        optionValue

    entrypoint testHash(hashValue: hash) : hash =
        hashValue

    entrypoint testSignature(signatureValue: signature) : signature =
        signatureValue

    stateful entrypoint testIntStateful(intValue: int) : int =
        intValue

    stateful entrypoint testAddressStateful(addressValue: address) : address =
        addressValue

    stateful entrypoint testBoolStateful(boolValue: bool) : bool =
        boolValue

    stateful entrypoint testBitsStateful(bitsValue: bits) : bits =
        bitsValue

    stateful entrypoint testBytesStateful(bytesValue: bytes(64)) : bytes(64) =
        bytesValue

    entrypoint testStringStateful(stringValue: string) : string =
        stringValue

    stateful entrypoint testListIntStateful(listIntValue: list(int)) : list(int) =
        listIntValue

    stateful entrypoint testListAddressIntStateful(listAddressIntValue: list(address * int)) : list(address * int) =
        listAddressIntValue

    stateful entrypoint testCompanyRecordStateful(companyRecordValue: company) : company =
        companyRecordValue
    
    stateful entrypoint testMapStringAddressStateful(mapStringAddressValue: map(string, address)) : map(string, address) =
        mapStringAddressValue

    stateful entrypoint testOptionStateful(optionValue: option('a)) : option('a) =
        optionValue

    stateful entrypoint testHashStateful(hashValue: hash) : hash =
        hashValue

    stateful entrypoint testSignatureStateful(signatureValue: signature) : signature =
        signatureValue